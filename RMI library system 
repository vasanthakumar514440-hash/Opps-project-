import java.rmi.*;
import java.util.*;

public interface Library extends Remote {
    List<String> getBooks() throws RemoteException;
    String issueBook(String book) throws RemoteException;
    String returnBook(String book) throws RemoteException;
}
import java.rmi.*;
import java.rmi.server.*;
import java.util.*;

public class LibraryServer extends UnicastRemoteObject implements Library {
    private List<String> books;

    protected LibraryServer() throws RemoteException {
        super();
        books = new ArrayList<>();
        books.add("Data Structures");
        books.add("Operating Systems");
        books.add("Java Programming");
        books.add("Computer Networks");
    }

    public List<String> getBooks() {
        return books;
    }

    public String issueBook(String book) {
        if (books.remove(book)) {
            return "‚úÖ " + book + " has been issued.";
        } else {
            return "‚ùå " + book + " is not available.";
        }
    }

    public String returnBook(String book) {
        books.add(book);
        return "üìó " + book + " has been returned.";
    }

    public static void main(String[] args) {
        try {
            LibraryServer obj = new LibraryServer();
            Naming.rebind("rmi://localhost/LibraryService", obj);
            System.out.println("‚úÖ Library Server is running...");
        } catch (Exception e) {
            System.out.println("Server Error: " + e);
        }
    }
}
import java.rmi.*;
import java.util.*;

public class LibraryClient {
    public static void main(String[] args) {
        try {
            Library lib = (Library) Naming.lookup("rmi://localhost/LibraryService");
            Scanner sc = new Scanner(System.in);

            while (true) {
                System.out.println("\n=== Library Menu ===");
                System.out.println("1. Show Books");
                System.out.println("2. Issue Book");
                System.out.println("3. Return Book");
                System.out.println("4. Exit");
                System.out.print("Enter choice: ");
                int ch = sc.nextInt();
                sc.nextLine();

                switch (ch) {
                    case 1:
                        System.out.println("Available Books: " + lib.getBooks());
                        break;
                    case 2:
                        System.out.print("Enter book to issue: ");
                        System.out.println(lib.issueBook(sc.nextLine()));
                        break;
                    case 3:
                        System.out.print("Enter book to return: ");
                        System.out.println(lib.returnBook(sc.nextLine()));
                        break;
                    case 4:
                        System.out.println("Goodbye!");
                        return;
                    default:
                        System.out.println("Invalid choice!");
                }
            }
        } catch (Exception e) {
            System.out.println("Client Error: " + e);
        }
    }
}